# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution(object):
    def isCousins(self, root, x, y):
        """
        :type root: TreeNode
        :type x: int
        :type y: int
        :rtype: bool
        """
        temp = {}
        def isCousinsHelper(curr, parent, x, y, level):
            if curr is None:
                return False
            if curr.val == x:
                temp[x] = [parent.val, level]
            if curr.val == y:
                temp[y] = [parent.val, level]
            parent = curr
            isCousinsHelper(curr.left, parent, x, y, level+1)
            isCousinsHelper(curr.right, parent, x, y, level+1)
            
        isCousinsHelper(root, root, x, y, 0)
        return temp[x][0] != temp[y][0] and temp[x][1] == temp[y][1]
    
    
